// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UsersList.DataAccess;

#nullable disable

namespace UsersList.DataAccess.Migrations
{
    [DbContext(typeof(UsersListDbContext))]
    partial class UsersListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DepartmentUser", b =>
                {
                    b.Property<Guid>("DepartmentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("DepartmentUser");
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e7b2c05-4316-4131-95e3-4bce0ba31bc2"),
                            Name = "Финансовый"
                        },
                        new
                        {
                            Id = new Guid("bda8ce7e-1d98-4a65-b9cc-195167404807"),
                            Name = "Логистики",
                            ParentId = new Guid("7e7b2c05-4316-4131-95e3-4bce0ba31bc2")
                        },
                        new
                        {
                            Id = new Guid("414a8ef5-48c1-4179-91cd-56097b6b31f1"),
                            Name = "Закупок",
                            ParentId = new Guid("7e7b2c05-4316-4131-95e3-4bce0ba31bc2")
                        },
                        new
                        {
                            Id = new Guid("47a7bfb3-ef3e-47e2-ab43-c317312b2187"),
                            Name = "Кадров",
                            ParentId = new Guid("7e7b2c05-4316-4131-95e3-4bce0ba31bc2")
                        },
                        new
                        {
                            Id = new Guid("1164ae15-cf81-41a2-8804-b4eff6117ffb"),
                            Name = "Развлечений"
                        });
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bb18507-6fb0-4890-8e6d-9dcc2510f2f1"),
                            FirstName = "Антон",
                            LastName = "Антонов",
                            Patronymic = "Антонович",
                            Salary = 123m
                        },
                        new
                        {
                            Id = new Guid("347069e6-83ad-4463-85b2-467ce4ae8c65"),
                            FirstName = "Борис",
                            LastName = "Борисов",
                            Patronymic = "Борисович",
                            Salary = 125.5m
                        },
                        new
                        {
                            Id = new Guid("e79e39d9-673d-41c2-912a-2c0c3f6a3f14"),
                            FirstName = "Владимир",
                            LastName = "Владимиров",
                            Patronymic = "Владимирович",
                            Salary = 155m
                        },
                        new
                        {
                            Id = new Guid("1dd132b1-98cc-4a77-a3fc-6c9a1ba49cb8"),
                            FirstName = "Григорий",
                            LastName = "Григорьев",
                            Patronymic = "Григорьевич",
                            Salary = 101m
                        },
                        new
                        {
                            Id = new Guid("494acce1-4d96-4da3-88cb-35e96f8aa5d3"),
                            FirstName = "Дмитрий",
                            LastName = "Дмитриев",
                            Patronymic = "Дмитриевич",
                            Salary = 200m
                        });
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.UserDepartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDepartments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("561cff71-039f-4075-a50a-e339a1943a21"),
                            DepartmentId = new Guid("7e7b2c05-4316-4131-95e3-4bce0ba31bc2"),
                            UserId = new Guid("9bb18507-6fb0-4890-8e6d-9dcc2510f2f1")
                        },
                        new
                        {
                            Id = new Guid("3e297885-7b66-4c5f-95a1-756ec94d605a"),
                            DepartmentId = new Guid("bda8ce7e-1d98-4a65-b9cc-195167404807"),
                            UserId = new Guid("347069e6-83ad-4463-85b2-467ce4ae8c65")
                        },
                        new
                        {
                            Id = new Guid("518f03e0-e2a7-4017-a260-5319579bc71a"),
                            DepartmentId = new Guid("414a8ef5-48c1-4179-91cd-56097b6b31f1"),
                            UserId = new Guid("347069e6-83ad-4463-85b2-467ce4ae8c65")
                        },
                        new
                        {
                            Id = new Guid("2940c7bd-ae4c-4a57-99fb-066afaacf8c6"),
                            DepartmentId = new Guid("47a7bfb3-ef3e-47e2-ab43-c317312b2187"),
                            UserId = new Guid("347069e6-83ad-4463-85b2-467ce4ae8c65")
                        },
                        new
                        {
                            Id = new Guid("928b1961-1d93-4d60-8730-1d59dbef255f"),
                            DepartmentId = new Guid("7e7b2c05-4316-4131-95e3-4bce0ba31bc2"),
                            UserId = new Guid("e79e39d9-673d-41c2-912a-2c0c3f6a3f14")
                        },
                        new
                        {
                            Id = new Guid("d7a4865c-262b-4e88-81e1-f10e3c868e66"),
                            DepartmentId = new Guid("1164ae15-cf81-41a2-8804-b4eff6117ffb"),
                            UserId = new Guid("e79e39d9-673d-41c2-912a-2c0c3f6a3f14")
                        },
                        new
                        {
                            Id = new Guid("0945faf5-35f9-4666-9b62-09bd8a1db537"),
                            DepartmentId = new Guid("7e7b2c05-4316-4131-95e3-4bce0ba31bc2"),
                            UserId = new Guid("1dd132b1-98cc-4a77-a3fc-6c9a1ba49cb8")
                        },
                        new
                        {
                            Id = new Guid("f52d360c-0ae7-41a3-b855-ce17eeda83e7"),
                            DepartmentId = new Guid("bda8ce7e-1d98-4a65-b9cc-195167404807"),
                            UserId = new Guid("1dd132b1-98cc-4a77-a3fc-6c9a1ba49cb8")
                        },
                        new
                        {
                            Id = new Guid("111a0096-4f18-4c8e-b0d9-75407ea3a2ac"),
                            DepartmentId = new Guid("7e7b2c05-4316-4131-95e3-4bce0ba31bc2"),
                            UserId = new Guid("494acce1-4d96-4da3-88cb-35e96f8aa5d3")
                        },
                        new
                        {
                            Id = new Guid("4e8e7d24-8f65-4eec-9320-6bceaa4a2a07"),
                            DepartmentId = new Guid("bda8ce7e-1d98-4a65-b9cc-195167404807"),
                            UserId = new Guid("494acce1-4d96-4da3-88cb-35e96f8aa5d3")
                        },
                        new
                        {
                            Id = new Guid("c753c9ce-1664-41ff-bd28-cea88529b736"),
                            DepartmentId = new Guid("414a8ef5-48c1-4179-91cd-56097b6b31f1"),
                            UserId = new Guid("494acce1-4d96-4da3-88cb-35e96f8aa5d3")
                        },
                        new
                        {
                            Id = new Guid("ab25d3a0-75b2-437f-a234-2885e7b3dbb7"),
                            DepartmentId = new Guid("47a7bfb3-ef3e-47e2-ab43-c317312b2187"),
                            UserId = new Guid("494acce1-4d96-4da3-88cb-35e96f8aa5d3")
                        },
                        new
                        {
                            Id = new Guid("d886528a-0af3-4871-901b-2ea1723c8ef1"),
                            DepartmentId = new Guid("1164ae15-cf81-41a2-8804-b4eff6117ffb"),
                            UserId = new Guid("494acce1-4d96-4da3-88cb-35e96f8aa5d3")
                        });
                });

            modelBuilder.Entity("DepartmentUser", b =>
                {
                    b.HasOne("UsersList.DataAccess.Entities.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsersList.DataAccess.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.Department", b =>
                {
                    b.HasOne("UsersList.DataAccess.Entities.Department", "Parent")
                        .WithMany("SubDepartments")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.UserDepartment", b =>
                {
                    b.HasOne("UsersList.DataAccess.Entities.Department", "Department")
                        .WithMany("UserDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsersList.DataAccess.Entities.User", "User")
                        .WithMany("UserDepartments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.Department", b =>
                {
                    b.Navigation("SubDepartments");

                    b.Navigation("UserDepartments");
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.User", b =>
                {
                    b.Navigation("UserDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
