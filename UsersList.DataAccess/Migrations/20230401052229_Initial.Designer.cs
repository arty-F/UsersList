// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UsersList.DataAccess;

#nullable disable

namespace UsersList.DataAccess.Migrations
{
    [DbContext(typeof(UsersListDbContext))]
    [Migration("20230401052229_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DepartmentUser", b =>
                {
                    b.Property<Guid>("DepartmentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("DepartmentUser");
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9f56b45-3a0d-4b86-af63-234ba4d37c20"),
                            Name = "Финансовый"
                        },
                        new
                        {
                            Id = new Guid("7830d605-8bfc-45ca-a736-cdcbb26c6d5a"),
                            Name = "Логистики",
                            ParentId = new Guid("b9f56b45-3a0d-4b86-af63-234ba4d37c20")
                        },
                        new
                        {
                            Id = new Guid("c1dd00d2-428e-430f-9fcf-8b96fd2512b5"),
                            Name = "Закупок",
                            ParentId = new Guid("b9f56b45-3a0d-4b86-af63-234ba4d37c20")
                        },
                        new
                        {
                            Id = new Guid("55ad76ec-c8cd-4df1-acae-ebe2f20771e8"),
                            Name = "Кадров",
                            ParentId = new Guid("b9f56b45-3a0d-4b86-af63-234ba4d37c20")
                        },
                        new
                        {
                            Id = new Guid("8979d9eb-3e97-4470-bbfe-78fca77b414b"),
                            Name = "Развлечений"
                        });
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17a90727-cae1-44fd-94a3-0c38fbe3b539"),
                            FirstName = "Антон",
                            LastName = "Антонов",
                            Patronymic = "Антонович",
                            Salary = 123m
                        },
                        new
                        {
                            Id = new Guid("7ceeb499-4c14-419b-a331-b1437c062469"),
                            FirstName = "Борис",
                            LastName = "Борисов",
                            Patronymic = "Борисович",
                            Salary = 125.5m
                        },
                        new
                        {
                            Id = new Guid("9cde75ae-35e4-4c69-8580-996e47d55306"),
                            FirstName = "Владимир",
                            LastName = "Владимиров",
                            Patronymic = "Владимирович",
                            Salary = 155m
                        },
                        new
                        {
                            Id = new Guid("9f262dfa-10d4-401d-be94-32b4fb1f1bfb"),
                            FirstName = "Григорий",
                            LastName = "Григорьев",
                            Patronymic = "Григорьевич",
                            Salary = 101m
                        },
                        new
                        {
                            Id = new Guid("7804a181-1025-482a-aec8-88f35c4bb058"),
                            FirstName = "Дмитрий",
                            LastName = "Дмитриев",
                            Patronymic = "Дмитриевич",
                            Salary = 200m
                        });
                });

            modelBuilder.Entity("DepartmentUser", b =>
                {
                    b.HasOne("UsersList.DataAccess.Entities.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsersList.DataAccess.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.Department", b =>
                {
                    b.HasOne("UsersList.DataAccess.Entities.Department", "Parent")
                        .WithMany("SubDepartments")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("UsersList.DataAccess.Entities.Department", b =>
                {
                    b.Navigation("SubDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
